@model MatchDto
@inject IUsersService usersService
@inject IAuthManager authManager
@inject IPlayersService playersService
@inject IPhotoService photoService
@inject ITournamentsService tournamentsService
@{
    var user = this.authManager.CurrentUser;
    var player1 = this.playersService.GetByFullName(this.Model.Players[0]);
    var player2 = this.playersService.GetByFullName(this.Model.Players[1]);
    var email = this.usersService.GetById(this.Model.DirectorId).Email;
}


<section class="schedule-section pb-0">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="schedule-text">
                    <h4 class="st-title">Details</h4>
                    <div class="st-table">
                        <table>
                            <tbody>
                                <tr>
                                    <td class="left-team">
                                        <img src="@photoService.GetPhotoUrl(player1.Id)" style="width:100px; height:100px" alt="">
                                        <a asp-controller="Players" asp-action="Details" asp-route-id="@player1.Id" class="btn-change"><h4>@this.Model.Players[0]</h4></a>
                                        <br>
                                        @{
                                            if (this.Model.TournamentId != null)
                                            {
                                                var tournament = this.tournamentsService.GetById((int)this.Model.TournamentId);
                                                <a asp-controller="Tournaments" asp-action="Details" asp-route-id=@this.Model.TournamentId class="btn-change"><h6>Tournament @tournament.Title</h6></a>
                                            }
                                        }

                                    </td>
                                    <td class="st-option">
                                        
                                            <div class="so-text"><h6>Director: @email</h6></div>
                                        <br />
                                        
                                        @{
                                            
                                            var dictNames = new Dictionary<string, string>
                                        {
                                        { "score1", "" },
                                        { "score2", "" }
                                        };
                                        

                                            if (user != null && (user.Role.Name.Equals("Admin") || (user.Role.Name.Equals("Director") && (user.Id == this.Model.DirectorId))) && (this.Model.Status == "Current"))
                                            {

                                                                                                    <form asp-controller="Matches" asp-action="Finish" asp-all-route-data="@dictNames" asp-route-id="@this.Model.Id" method="get" id="Finish">
                                                                                                        <div class="group-in">
                                                                                                            <input asp-for="@dictNames["score1"]" type="text" class="match-result" value="0" style="width: 20px">
                                                                                                            <input asp-for="@dictNames["score2"]" type="text" class="match-result" value="0" style="width: 20px">
                                                                                                        </div>
                                                                                                        <br>
                                                                                                        @{
                                                        if (this.Model.Format == "TimeLimited")
                                                        {
                                                                                                                                                                    <button type="button" id="timerCountDown" class="btn btn-warning">Start</button>
                                                                                                                                                                    <button class="btn btn-dark" type="submit" id="btn-finish">Finish</button>
                                                        }
                                                        else
                                                        {
                                                                                                                                                                    <button class="btn btn-dark" type="submit" onmouseover="validateScore()">Finish</button>
                                                                            
                                                                                                <div class="popup" id="popup">
                                                                                                    <img class="img-responsive" id="img-popup" src="/img/triangle-yellow.png">
                                                                                                    <h3>Please update the score!</h3>
                                                                                                    <p>The match is score limited. The result could not be draw!!!</p>
                                                                                                    <button type="button" onclick="closePopup()">OK</button>
                                                                                                </div>
   
                                                        }
                                                        
                                                                                                        }


                                                                                                    </form>
                                                                                                    <br>
                                                                                                    <div class="d-flex justify-content-around">
                                                                                                        <button type="button" class="btn btn-secondary btn-sm" onclick="increment1()" name="arrow">&#8593;</button>
                                                                                                        <br>
                                                                                                        <button type="button" class="btn btn-secondary btn-sm" onclick="decrement1()" name="arrow">&#8595</button>
                                                                                                        <button type="button" class="btn btn-secondary btn-sm" onclick="increment2()" name="arrow">&#8593;</button>
                                                                                                        <br>
                                                                                                        <button type="button" class="btn btn-secondary btn-sm" onclick="decrement2()" name="arrow">&#8595</button>
                                                                                                    </div>
                                            }
                                            else
                                            {
                                                                                                    <h2>@this.Model.Score1 : @this.Model.Score2</h2>
                                            }

                                        }
                                        <br />
                                        <div class="so-text"><h6>@this.Model.Date.ToString("dd/MM/yyyy")</h6></div>
                                        <br />
                                        <div class="so-text"><h6>@this.Model.Format.ToString()</h6></div>
                                    </td>
                                    <td class="right-team pr-0">
                                        <img src="@photoService.GetPhotoUrl(player2.Id)" style="width:100px; height:100px" alt="">
                                        <a asp-controller="Players" asp-action="Details" asp-route-id="@player2.Id" class="btn-change"><h4>@this.Model.Players[1]</h4></a>
                                        <br>
                                        @{
                                            if (this.Model.RoundId != null)
                                            {
                                                //var tournament = this.tournamentsService.GetById((int)this.Model.TournamentId);
                                                <a asp-controller="Tournaments" asp-action="Round" asp-route-id=@this.Model.RoundId class="btn-change"><h6>Round @this.Model.RoundId</h6></a>
                                            }
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="content-update-delete">

        @{
            if (user != null && (user.Role.Name.Equals("Admin") || ((user.Role.Name.Equals("Director") && (user.Id == this.Model.DirectorId)))) && (this.Model.Status == "Current"))
            {
                                                                    <a asp-controller="Matches" asp-action="Update" asp-route-id="@this.Model.Id" id="update">Update</a>
            }
        }

        @{
            if (user != null && user.Role.Name.Equals("Admin") && (this.Model.Status == "Current"))
            {
                                                                    <button type="button" id="delete" data-toggle="modal" data-target="#myModal">Delete</button>
            }
        }

</section>

<div class="modal fade" id="myModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Delete Confirmation</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body text-center mb-5">
                <img src="~/img/warning-sign.png" style="width: 150px;" class="img-responsive">
                <h1>Are You Sure?</h1>
                <p>Do you really want to delete match: <b style="font-size: 17px">@this.Model.Id</b>? This process cannot be undone.</p>
                <div class="btn-group">
                    <button type="button" class="btn btn-secondary btn-lg mr-2 rounded-lg" data-dismiss="modal">Cancel</button>
                    <form asp-controller="Matches" asp-action="Delete" asp-route-id="@this.Model.Id" method="post">
                        <input type="submit" value="Delete" class="btn btn-lg btn-danger" />
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>


<style>
    /*#timerCountDown {
            text-align: center;
            padding: 4px;
            font-size: 2em;
            width: 150px;
            color: #fff;
            background-color: red;
            border: 1px solid black;
            border-radius: 5px;
        }*/
    #timerCountDown:disabled {
        background: grey;
        border: grey;
    }
    /* #timerCountDown:hover {
            background-color:darkred;
        }*/


    .btn-change {
        height: 50px;
        width: 100px;
        background: transparent;
        margin: 20px;
        float: left;
        -webkit-transition: all 0.5s ease-in-out;
        border: 0px;
        color: #fff;
    }

    .btn-change:hover {
        -webkit-transform: scale(1.1);
        background: transparent;
    }


    h2, h4, h6, label {
        font-weight: bold;
        color: #e5e5e5;
    }
    .schedule-text .st-table table tbody tr td h4 {
	line-height: 30px;
	color: #e5e5e5;
	font-weight: 500;
    }



    .popup {
        width: 400px;
        background: #fff;
        border-radius: 6px;
        position: absolute;
        top: 0;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.1);
        text-align: center;
        padding: 0 30px 30px;
        color: #333;
        visibility: hidden;
        transition: transform 0.4s, top 0.4s;
    }
    .open-popup{
        visibility: visible;
        top: 50%;
        transform: translate(-50%, -50%) scale(1);
    }
    #img-popup{
        width: 150px;
        height: auto;
        margin-top: -80px;
    }
    .popup h3{
        font-size: 38px;
        font-weight: 500;
        margin: 30px 0 10px;    
    }
    .popup button{
        width: 100%;
        margin-top: 50px;
        padding: 10px 0;
        background: #ffb907;
        color: black;
        border: 0;
        outline: none;
        font-size: 18px;
        border-radius: 4px;
        cursor: pointer;
        box-shadow: 0 5px 5px rgba(0, 0, 0, 0.2);
    }

    #update, #delete{
    width: 100%;
    display: block;
    padding: 15px 15px;
    text-align: center;
    margin: 0 10px;
    border-radius: 25px;
    font-weight: bold;
    border: 2px solid;
    color: black;
    cursor: pointer;
    transition: background 0.5s;
    }
    #update{
    background: #ffb907;
    }
    #delete{
        background: red;
    }
    #update:hover, #delete:hover{
        background: transparent;
        border: 2px solid #fff;
        color: #fff;
    }
    .content-update-delete{
        width: 60%;
        margin: 10px auto 0;
        text-align: center;
    }
</style>

<script>
    const timerElement = document.getElementById('timerCountDown');
    let timer;
    var arrows = document.getElementsByName('arrow');
    var scores = document.getElementsByClassName('match-result');
    const buttonFinish = document.getElementById('btn-finish')
    buttonFinish.disabled = true;

    function startTimeCountDown() {
        timer = 3;
        const timeCountdown = setInterval(countdown, 1000);
    }


    function countdown() {
        if (timer == 0) {
            clearTimeout(timer);
            timerElement.innerHTML = 'End';
            timerElement.disabled = true;
            buttonFinish.disabled = false;
            document.getElementById('update').style.visibility = 'hidden';
            for (i = 0; i < arrows.length; i++) {
                arrows[i].disabled = true;
                
            }
            //for (j = 0; j < scores.length; j++) {
            //        scores[i].readOnly = true;
            //        scores[i].style.color = "#c0c0c0";
            //    }
            
            

        } else {
            timerElement.innerHTML = timer + ' secs';
            timer--;
        }
    }

    timerElement.addEventListener('click', ev => {
        startTimeCountDown();
    });


    function increment1() {
        var score = document.getElementsByClassName('match-result')[0].value;
        score++;
        document.getElementsByClassName('match-result')[0].value = score;
    }

    function decrement1() {
        var score = document.getElementsByClassName('match-result')[0].value;
        if (score > 0) {
            score--;
        }
        document.getElementsByClassName('match-result')[0].value = score;
    }

    function increment2() {
        var score = document.getElementsByClassName('match-result')[1].value;
        score++;
        document.getElementsByClassName('match-result')[1].value = score;
    }

    function decrement2() {
        var score = document.getElementsByClassName('match-result')[1].value;
        if (score > 0) {
            score--;
        }
        document.getElementsByClassName('match-result')[1].value = score;
    }

    function validateScore() {
        var input1 = document.getElementsByClassName('match-result')[0].value;
        var input2 = document.getElementsByClassName('match-result')[1].value;
        if (input1 == input2) {
           openPopup();
        }
    }

    function openPopup() {
    let popup = document.getElementById("popup");
    popup.classList.add("open-popup");
    }
    function closePopup() {
        let popup = document.getElementById("popup");
        popup.classList.remove("open-popup");
    }

</script>



